name: GPT CI / CD with Docker

on:
  push:
    branches:
      - deploy-gpt
  pull_request:
    branches:
      - deploy-gpt


jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: DockerHub 로그인
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Image Build
        run: |
          cd gpt
          docker build -t ${{ secrets.DOCKER_USERNAME }}/fastapi-gpt:${{ github.sha }} .

      - name: Docker Hub Push
        run: docker push ${{ secrets.DOCKER_USERNAME }}/fastapi-gpt:${{ github.sha }}

  deploy-to-ec2:
    needs: build-docker-image
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # 프로젝트 디렉토리 생성 및 이동
          mkdir -p ~/fastapi-app
          cd ~/fastapi-app

          # Docker Hub 로그인 (Private 레포지토리 Pull을 위해)
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

          # 최신 이미지 Pull
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/fastapi-gpt:${{ github.sha }}

          # 기존 .env 파일 삭제 후 새로 생성
          echo "${{ secrets.GPT_SERVER_ENV }}" > .env
          chmod 600 .env  # 보안 강화

          # 기존 컨테이너 중지 및 삭제 (docker-compose down 대신 stop & rm)
          sudo docker stop fastapi-app || true
          sudo docker rm fastapi-app || true

          # 새 컨테이너 실행
          sudo docker-compose up -d

          # 불필요한 이미지 삭제
          sudo docker image prune -f

          # Nginx 재시작 (반영)
          sudo systemctl restart nginx